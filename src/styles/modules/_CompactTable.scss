@import '../functions';
@import '../theme';

.CompactTable {
	$root: &;

	$fontSize: $Theme-fontSize--larger;

	$base: $Theme-background;
	$stripe: $Theme-background--grey;
	$hover: $Theme-background--highlight;
	$border: $Theme-borderColor--light;

	$cellPaddingY: 4px;
	$cellPaddingX: 9px;

	$thumbnailCellWidth: 70px;

	width: 100%;
	font-size: $fontSize;
	border-collapse: collapse;

	p {
		margin: 0;
	}

	tr {
		background-color: $base;
	}

	td,
	th {
		padding: $cellPaddingY $cellPaddingX;
		border: none;
		line-height: 1.4em;
	}

	td {
		&:not(:first-of-type) {
			border-left: $Theme-borderWidth solid $border;
		}
	}

	th {
		border-bottom: $Theme-borderWidth solid $border;
	}

	&--stripe {
		tbody tr:nth-of-type(odd) {
			background-color: $stripe;
		}
	}

	&--hover {
		tbody tr:hover {
			background-color: $hover;
		}
	}

	&--alignColumnsForItemList {
		td,
		th {
			&:nth-of-type(1), // thumbnail
			&:nth-of-type(3), // creator
			&:nth-of-type(4), // genres
			&:nth-of-type(5), // characters
			&:nth-of-type(9) { // production status
				text-align: center;
			}

			&:nth-of-type(2), // title + tags
			&:nth-of-type(6), // notes
			&:nth-of-type(7) { // date
				text-align: left;
			}

			&:nth-of-type(8) { // length
				text-align: right;
			}

			// make notes column take up all extra space
			&:nth-of-type(6) {
				width: 100%;
			}

			// fixed width for thumbnail column to avoid resizing as images load
			&:nth-of-type(1) {
				min-width: $thumbnailCellWidth;
			}
		}
	}

	&--alignColumnsForHistoryList {
		td,
		th {
			&:nth-of-type(1), // changes
			&:nth-of-type(2), // date
			&:nth-of-type(3) { // selected indicator
				text-align: left;
			}

			// make changes column take up all extra space
			&:nth-of-type(1) {
				width: 100%;
			}
		}
	}

	&-item {
		cursor: default;
		user-select: none;

		&--autowrap {
			&:not(:hover) {
				max-height: 1.75em;
				overflow: hidden;
				word-break: break-all;

				p {
					position: relative;

					&::after {
						position: absolute;
						top: 0;
						right: 0;
						bottom: 1.8em;
						left: calc(100% - 25%);
						background: fade-in($base);
						content: '';
						pointer-events: none;

						#{$root}--stripe tr:nth-of-type(odd) & {
							background: fade-in($stripe);
						}

						#{$root}--hover tr:hover & {
							background: fade-in($hover);
						}
					}
				}
			}
		}

		&--truncate {
			max-width: 350px;

			p {
				text-overflow: ellipsis;
				overflow: hidden;
			}
		}

		&--nowrap {
			white-space: nowrap;
		}

		&--small {
			font-size: smaller;
		}
	}

	&-tinyThumbnail {
		max-width: #{$thumbnailCellWidth - 2 * $cellPaddingX};
		max-height: 20px;
		margin-top: -8px;
		margin-bottom: -6px;
	}
}
